/* Generated by Together */

/**
 * For a description of Day visitors, follow hyperlink to the Administration use case for
 * issuing a new Day visitor permit.
 */
public class Day_visitor_permit extends Permit {
    /**
     * The name of the University member hosting the visit.
     */
    private String hostName;

    /**
     * The date that the visitor is visiting on - entry will be allowed on that date only.
     * @clientCardinality 1
     * @supplierCardinality 1
     * @label Visiting on
     * @link aggregation
     * @directed
     */
    private Date lnkDate;
    
    public Day_visitor_permit(String permitHolder, Date lnkDate, String hostName) {
    	super( permitHolder);
    	this.lnkDate = lnkDate;
    	this.hostName = hostName;
    }
    
//    public String toString() {
//		String s = "Type: Day Visitor Permit, name: " + this.getName() 
//				+ "Permit valid on day: #" + lnkDate.getDay()
//				+ "; #entries:" + this.getEntries() + "; warnings: " + this.getWarnings() 
//				+ ". Suspended? " + this.isSuspended() + ". Vehicle used today: " + this.getVehicleUsedToday().getRegNo() + ". Number of permitted vehicles:"
//				+ this.getVList().getSize();
//		return s;
//	}
    
    public Date getVisitDate() {
    	return lnkDate;
    }
    
    public void changeDate(Date d) {
    	lnkDate = d;
    }
    
    public void changeHostName(String s) {
    	hostName = s;
    }
    
    public String getHostName() {
    	return hostName;
    }
    
    public boolean isExpired(Date today) {
    	System.out.println(today.getDay());
    	System.out.println(lnkDate.getDay());
    	if (today.getDay() > lnkDate.getDay())	return true;
    	
    	return false;
    }
}
