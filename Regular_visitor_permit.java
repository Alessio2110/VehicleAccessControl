/* Generated by Together */

/**
 * For a description of Regular visitors, follow hyperlink to the Administration use case for
 * issuing a new Regular visitor permit.
 */
public class Regular_visitor_permit extends Permit {
    /**
     * The name of the University member hosting the visit.
     */
    private String hostName;

    /**
     * The date that the visit starts - entry will not be allowed before this date.
     * @label Starting on
     * @clientCardinality 1
     * @supplierCardinality 1
     * @link aggregation
     * @directed
     */
    private Date lnkDate;

    /**
     * The date that the visit ends - entry will not be allowed after this date.
     * @label Ending on
     * @clientCardinality 1
     * @supplierCardinality 1
     * @link aggregation
     * @directed
     */
    private Date lnkDate1;
    /**
    *This requires the name of the University member receiving the visitor, the name of the visitor (the permit holder),
    *the visitor's vehicle registration numbers and the start and end dates on which the visits will occur. 
    *This category of visitor would be appropriate for, say, a researcher collaborating with someone in the University for a couple of weeks,
    *or for actors appearing in a short-running production at the MacRobert Theatre.
    *required: hostName, permitHolder, vehicleUsedToday, lnkDate, lnkDate1
    **/
    public Regular_visitor_permit(String permitHolder, Date lnkDate, Date lnkDate1, String hostName) {
//    	super( permitHolder, noOfEntries, warnings, suspended, enteredToday, vehicleUsedToday, permittedVehicles);
    	super(permitHolder);
    	this.lnkDate = lnkDate;
    	this.lnkDate1 = lnkDate1;
    	this.hostName = hostName;
    }
}
